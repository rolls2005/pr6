events {}

http {
	upstream app {
		server app:3000; # Use the service name and port
		keepalive 64;  # Reuse up to 64 connections to reduce connection overhead
	}
	server {
		listen 80;

		server_name localhost;

		# Проксі для Fastify-додатка
		# Proxy all other API requests to Node.js
		location /api {
			rewrite ^/api(/.*)$ $1 break;  # Strip `/api` prefix from the URL

			proxy_pass http://app/;  # 'app' is the service name in docker-compose
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection ''; # Use 1.1 to keep connection alive

			proxy_connect_timeout 30s;
			proxy_read_timeout 30s;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /api/docs {
			rewrite ^/api(/.*)$ $1 break;  # Strip `/api` prefix from the URL

			proxy_pass http://app/;  # 'app' is the service name in docker-compose
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# Enable basic authentication for API documentation
			auth_basic "Restricted API Documentation";
			auth_basic_user_file /etc/nginx/.htpasswd;
		}
	}
}
